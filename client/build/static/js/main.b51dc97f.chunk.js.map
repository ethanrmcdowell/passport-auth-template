{"version":3,"sources":["Redux/store.js","components/Login/index.js","components/Dashboard/index.js","components/PrivateRoute/index.js","components/Signup/index.js","App.js","index.js"],"names":["persistConfig","key","storage","stateReconciler","autoMergeLevel2","initialState","email","password","jwtToken","loggedIn","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","pReducer","persistReducer","state","action","type","store","createStore","persistor","persistStore","Login","props","useState","user","setUser","setLoggedIn","loginMessage","dispatch","useDispatch","userInfo","useSelector","onChange","e","preventDefault","target","name","value","onSubmit","axios","post","then","response","data","token","history","push","htmlFor","className","href","onClick","console","log","Dashboard","logoutHandler","a","PrivateRoute","path","component","to","Signup","signupMessage","setSignupMessage","req","passwordrepeat","catch","err","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b51dc97f.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/integration/react';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst initialState = {\n  email: '',\n  password: '',\n  jwtToken: '',\n  loggedIn: false,\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'userLogin':\n      return {\n        email: action.email,\n        password: action.password,\n        jwtToken: action.jwtToken,\n        loggedIn: true,\n      };\n    case 'userLogout':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\nconst pReducer = persistReducer(persistConfig, loginReducer);\n\nexport const store = createStore(pReducer, composedEnhancer);\nexport const persistor = persistStore(store);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [user, setUser] = useState({ email: '', password: '', jwtToken: '' });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginMessage, setLoginMessage] = useState('');\n\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state);\n\n  const onChange = e => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    axios\n      .post(\n        `http://localhost:3000/login?email=${user.email}&password=${user.password}`\n      )\n      .then(response => {\n        if (response) {\n          setLoggedIn(true);\n          dispatch({\n            type: 'userLogin',\n            email: user.email,\n            password: user.password,\n            jwtToken: response.data.token,\n            loggedIn: true,\n          });\n        }\n      })\n      .then(() => {\n        props.history.push('/dashboard');\n      });\n  };\n\n  const storeHandler = e => {\n    e.preventDefault();\n    console.log(userInfo);\n  };\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='email'>\n          Email:\n          <input type='text' name='email' onChange={onChange} />\n        </label>\n        <label htmlFor='password'>\n          Password:\n          <input type='password' name='password' onChange={onChange} />\n        </label>\n        <input className='submitButton' type='submit' value='Submit' />\n      </form>\n      <p>{loginMessage}</p>\n      <p>\n        Don't have an account? <a href='/signup'>Sign up!</a>\n      </p>\n      <p>\n        Already logged in? Head to your <a href='/dashboard'>dashboard</a>!\n      </p>\n      <button onClick={storeHandler}>Log Redux Store</button>\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Dashboard = props => {\n  const userInfo = useSelector(state => state);\n  const dispatch = useDispatch();\n  const logoutHandler = async e => {\n    e.preventDefault();\n    await dispatch({ type: 'userLogout' });\n    props.history.push('/');\n  };\n\n  const storeHandler = e => {\n    e.preventDefault();\n    console.log(userInfo);\n  };\n\n  return (\n    <>\n      <h2>This is the secure dashboard! You're logged in {userInfo.email}!!</h2>\n      <button onClick={logoutHandler}>Logout</button>\n      <button onClick={storeHandler}>Log Redux Store</button>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport Login from '../Login';\nimport Dashboard from '../Dashboard';\n\nconst PrivateRoute = props => {\n  const isLoggedIn = useSelector(state => state.loggedIn);\n  if (!isLoggedIn) {\n    return <Redirect to='/' />;\n  } else {\n    return <Route path='/dashboard' component={Dashboard} />;\n  }\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nconst Signup = props => {\n  const [user, setUser] = useState({ email: '', password: '' });\n  const [signupMessage, setSignupMessage] = useState('');\n\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state);\n\n  const onChange = e => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e, req) => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n    if (user.password !== user.passwordrepeat) {\n      setSignupMessage('Passwords do not match');\n    } else {\n      await axios\n        .post(\n          `http://localhost:3000/signup?email=${user.email}&password=${user.password}`\n        )\n        .then(response => {\n          console.log(response);\n        })\n        .catch(err => {\n          console.log(err.response);\n        });\n    }\n  };\n\n  const testHandler = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <h2>Signup</h2>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='email'>\n          Email:\n          <input type='text' name='email' onChange={onChange} />\n        </label>\n        <label htmlFor='password'>\n          Password:\n          <input type='password' name='password' onChange={onChange} />\n        </label>\n        <label htmlFor='passwordrepeat'>\n          Re-enter Password:\n          <input type='password' name='passwordrepeat' onChange={onChange} />\n        </label>\n        <input className='submitButton' type='submit' value='Submit' />\n      </form>\n      <p className='signupMessage'>{signupMessage}</p>\n      <p>\n        Already have an account? <a href='/'>Login!</a>\n      </p>\n      <button onClick={testHandler}>Test</button>\n    </>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './style.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Login} />\n        <Route exact path='/signup' component={Signup} />\n        <PrivateRoute />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './Redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}