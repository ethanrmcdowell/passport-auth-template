{"version":3,"sources":["Redux/store.js","components/Dashboard/index.js","components/PrivateRoute/index.js","components/Login/index.js","components/Signup/index.js","App.js","index.js"],"names":["persistConfig","key","storage","stateReconciler","autoMergeLevel2","initialState","email","password","jwtToken","loggedIn","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","pReducer","persistReducer","state","action","type","store","createStore","persistor","persistStore","Dashboard","props","userInfo","useSelector","dispatch","useDispatch","logoutHandler","e","a","preventDefault","history","push","onClick","console","log","PrivateRoute","path","component","to","Login","useState","user","setUser","loginMessage","setLoginMessage","onChange","target","name","value","onSubmit","axios","post","then","response","data","token","catch","error","htmlFor","className","href","Signup","signupMessage","setSignupMessage","req","passwordrepeat","err","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6326c53.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/integration/react';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst initialState = {\n  email: '',\n  password: '',\n  jwtToken: '',\n  loggedIn: false,\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'userLogin':\n      return {\n        email: action.email,\n        password: action.password,\n        jwtToken: action.jwtToken,\n        loggedIn: true,\n      };\n    case 'userLogout':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\nconst pReducer = persistReducer(persistConfig, loginReducer);\n\nexport const store = createStore(pReducer, composedEnhancer);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Dashboard = props => {\n  const userInfo = useSelector(state => state);\n  const dispatch = useDispatch();\n  const logoutHandler = async e => {\n    e.preventDefault();\n    await dispatch({ type: 'userLogout' });\n    props.history.push('/');\n  };\n\n  const storeHandler = e => {\n    e.preventDefault();\n    console.log(userInfo);\n  };\n\n  return (\n    <>\n      <h2>This is the secure dashboard! You're logged in {userInfo.email}!!</h2>\n      <button onClick={logoutHandler}>Logout</button>\n      <button onClick={storeHandler}>Log Redux Store</button>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport Dashboard from '../Dashboard';\n\nconst PrivateRoute = props => {\n  const isLoggedIn = useSelector(state => state.loggedIn);\n  if (!isLoggedIn) {\n    return <Redirect to='/' />;\n  } else {\n    return <Route path='/dashboard' component={Dashboard} />;\n  }\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [user, setUser] = useState({ email: '', password: '', jwtToken: '' });\n  const [loginMessage, setLoginMessage] = useState('');\n\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state);\n\n  const onChange = e => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    axios\n      .post(\n        `http://localhost:3000/login?email=${user.email}&password=${user.password}`\n      )\n      .then(response => {\n        if (response) {\n          dispatch({\n            type: 'userLogin',\n            email: user.email,\n            password: user.password,\n            jwtToken: response.data.token,\n            loggedIn: true,\n          });\n        }\n      })\n      .then(() => {\n        props.history.push('/dashboard');\n      })\n      .catch(error => setLoginMessage('Error!'));\n  };\n\n  const storeHandler = e => {\n    e.preventDefault();\n    console.log(userInfo);\n  };\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='email'>\n          Email:\n          <input type='text' name='email' onChange={onChange} />\n        </label>\n        <label htmlFor='password'>\n          Password:\n          <input type='password' name='password' onChange={onChange} />\n        </label>\n        <input className='submitButton' type='submit' value='Submit' />\n      </form>\n      <p>{loginMessage}</p>\n      <p>\n        Don't have an account? <a href='/signup'>Sign up!</a>\n      </p>\n      <p>\n        Already logged in? Head to your <a href='/dashboard'>dashboard</a>!\n      </p>\n      <button onClick={storeHandler}>Log Redux Store</button>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nconst Signup = props => {\n  const [user, setUser] = useState({ email: '', password: '' });\n  const [signupMessage, setSignupMessage] = useState('');\n\n  // const dispatch = useDispatch();\n  // const userInfo = useSelector(state => state);\n\n  const onChange = e => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e, req) => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n    if (user.password !== user.passwordrepeat) {\n      setSignupMessage('Passwords do not match');\n    } else {\n      await axios\n        .post(\n          `http://localhost:3000/signup?email=${user.email}&password=${user.password}`\n        )\n        .then(response => {\n          console.log(response);\n        })\n        .catch(err => {\n          console.log(err.response);\n        });\n    }\n  };\n\n  const testHandler = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <h2>Signup</h2>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='email'>\n          Email:\n          <input type='text' name='email' onChange={onChange} />\n        </label>\n        <label htmlFor='password'>\n          Password:\n          <input type='password' name='password' onChange={onChange} />\n        </label>\n        <label htmlFor='passwordrepeat'>\n          Re-enter Password:\n          <input type='password' name='passwordrepeat' onChange={onChange} />\n        </label>\n        <input className='submitButton' type='submit' value='Submit' />\n      </form>\n      <p className='signupMessage'>{signupMessage}</p>\n      <p>\n        Already have an account? <a href='/'>Login!</a>\n      </p>\n      <button onClick={testHandler}>Test</button>\n    </>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './style.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Login} />\n        <Route exact path='/signup' component={Signup} />\n        <PrivateRoute />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './Redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}